Skroba Dmitri

# Task 1:
# All possibles:

[P1,Q1,0,0] -> [P2,Q1,1,0] #
[P1,Q1,0,0] -> [P1,Q2,0,1] #

[P2,Q1,1,0] -> [P3,Q1,1,0] #
[P2,Q1,1,0] -> [P2,Q2,1,1] #

[P1,Q2,0,1] -> [P2,Q2,1,1] #
[P1,Q2,0,1] -> [P1,Q4,0,1] #

[P3,Q1,1,0] -> [P4,Q1,1,0] #
[P3,Q1,1,0] -> [P3,Q2,1,1] #

[P2,Q2,1,1] -> [P2,Q2,1,1] #
[P2,Q2,1,1] -> [P2,Q3,1,1] #

[P1,Q4,0,1] -> [P2,Q4,1,1] #

[P4,Q1,1,0] -> [P1,Q1,0,0] #
[P4,Q1,1,0] -> [P4,Q2,1,1] #

[P3,Q2,1,1] -> [P4,Q2,1,1] #
[P3,Q2,1,1] -> [P3,Q3,1,1] #

[P2,Q3,1,1] -> [P2,Q3,1,1] #
[P2,Q3,1,1] -> [P2,Q1,1,0] #

[P2,Q4,1,1] -> [P2,Q4,1,1] #

[P4,Q2,1,1] -> [P1,Q2,0,1] #
[P4,Q2,1,1] -> [P4,Q3,1,1] #

[P3,Q3,1,1] -> [P4,Q3,1,1] #
[P3,Q3,1,1] -> [P3,Q1,1,0] #

[P4,Q3,1,1] -> [P1,Q3,0,1] #
[P4,Q3,1,1] -> [P4,Q1,1,0] #

[P1,Q3,0,1] -> [P2,Q3,1,1] #
[P1,Q3,0,1] -> [P1,Q1,0,0] #

# Task 2:
# Possible states:

# [P1,Q1,0,0]
# [P1,Q2,0,1]
# [P1,Q3,0,1]
# [P1,Q4,0,1]
# [P2,Q1,1,0]
# [P2,Q2,1,1]
# [P2,Q3,1,1]
# [P2,Q4,1,1]
# [P3,Q1,1,0]
# [P3,Q2,1,1]
# [P3,Q3,1,1]
# [P4,Q1,1,0]
# [P4,Q2,1,1]
# [P4,Q3,1,1]

# All: 14

# Task 3:
# Нет, невозможно, так как состояние [P3,Q4] можно получить только следующими переходами:
# [P2,Q4] -> [P3,Q4]
# [P3,Q2] -> [P3,Q4]
# Состоянииия памяти при позиции [P2,Q4] : [P2,Q4,1,1] (единственное достижимое)
# В нем невозможен переход в программе P на следующую строчку, тк b != 0 и мы находимся в цикле
# Состоянииия памяти при позиции [P3,Q2] : [P3,Q2,1,1] (единственное достижимое)
# Тк a != 0, мы не можем выйти из цикла

# Task 4:
# Да, для каждого достижимого состояния:
# [P1,Q1,0,0] -> [P2,Q1,1,0] -> [P3,Q1,1,0] -> [P4,Q1,1,0] -> [P4,Q2,1,1] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P1,Q3,0,1] -> [P2,Q3,1,1] -> [P2,Q1,1,0] -> [P3,Q1,1,0] -> [P4,Q1,1,0] -> [P1,Q1,0,0] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P1,Q4,0,1]
# [P2,Q1,1,0] -> [P3,Q1,1,0] -> [P4,Q1,1,0] -> [P1,Q1,0,0] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P2,Q2,1,1] -> [P2,Q3,1,1] -> [P2,Q1,1,0] -> [P3,Q1,1,0] -> [P4,Q1,1,0] -> [P1,Q1,0,0] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P2,Q3,1,1] -> [P2,Q1,1,0] -> [P3,Q1,1,0] -> [P4,Q1,1,0] -> [P1,Q1,0,0] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P2,Q4,1,1]
# [P3,Q1,1,0] -> [P4,Q1,1,0] -> [P1,Q1,0,0] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P3,Q2,1,1] -> [P4,Q2,1,1] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P3,Q3,1,1] -> [P4,Q3,1,1] -> [P1,Q3,0,1] -> [P2,Q3,1,1] -> [P2,Q1,1,0] -> [P3,Q1,1,0] -> [P4,Q1,1,0] -> [P1,Q1,0,0] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P4,Q1,1,0] -> [P1,Q1,0,0] -> [P2,Q1,1,0] -> [P3,Q1,1,0] -> [P3,Q2,1,1] -> [P4,Q2,1,1] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P4,Q2,1,1] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
# [P4,Q3,1,1] -> [P1,Q3,0,1] -> [P2,Q3,1,1] -> [P2,Q1,1,0] -> [P3,Q1,1,0] -> [P4,Q1,1,0] -> [P1,Q1,0,0] -> [P1,Q2,0,1] -> [P1,Q4,0,1]
